/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.0-dev */

#ifndef PB_SETSTEERINGANGLE_PB_H_INCLUDED
#define PB_SETSTEERINGANGLE_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _SetSteeringAnglePayload {
    uint32_t steering_angle;
/* @@protoc_insertion_point(struct:SetSteeringAnglePayload) */
} SetSteeringAnglePayload;


/* Initializer values for message structs */
#define SetSteeringAnglePayload_init_default     {0u}
#define SetSteeringAnglePayload_init_zero        {0}

/* Field tags (for use in manual encoding/decoding) */
#define SetSteeringAnglePayload_steering_angle_tag 1

/* Struct field encoding specification for nanopb */
#define SetSteeringAnglePayload_FIELDLIST(X, a) \
X(a, STATIC, REQUIRED, FIXED32, steering_angle, 1)
#define SetSteeringAnglePayload_CALLBACK NULL
#define SetSteeringAnglePayload_DEFAULT (const uint8_t*)"\x0d\x00\x00\x00\x00\x00"

extern const pb_msgdesc_t SetSteeringAnglePayload_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define SetSteeringAnglePayload_fields &SetSteeringAnglePayload_msg

/* Maximum encoded size of messages (where known) */
#define SetSteeringAnglePayload_size             5

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
